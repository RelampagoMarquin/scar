generator client {
  provider = "prisma-client-js"
}

///////////////////////
/// Conex√£o com o banco
///////////////////////

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

///////////////////////
/// Modelos
///////////////////////
model Answers {
  id         Int       @id @default(autoincrement())
  userId     Int
  questionId Int
  answer     String    @db.Text
  best       Boolean?  @default(false)
  avaliation Int?      @default(0)
  creatAt    DateTime  @default(now())
  question   Questions @relation(fields: [questionId], references: [id], map: "Ansewr_questionId_fkey")
  user       Users     @relation(fields: [userId], references: [id], map: "Ansewr_userId_fkey")
  Midias     Midias[]

  @@index([questionId], map: "Ansewr_questionId_fkey")
  @@index([userId], map: "Ansewr_userId_fkey")
}

model Questions {
  id           Int            @id @default(autoincrement())
  userId       Int
  question     String         @db.Text
  resolved     Boolean?       @default(false)
  creatAt      DateTime       @default(now())
  user         Users          @relation(fields: [userId], references: [id], map: "Question_userId_fkey")
  Answer       Answers[]
  Midias       Midias[]
  Questiontags Questiontags[]

  @@index([userId], map: "Question_userId_fkey")
}

model Types {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)
  Tags Tags[]
}

model Users {
  id           Int         @id @default(autoincrement())
  name         String      @db.VarChar(50)
  registration String      @unique(map: "User_registration_key") @db.VarChar(14)
  email        String      @unique(map: "User_email_key")
  class        String      @db.VarChar(10)
  password     String
  answers      Answers[]
  questions    Questions[]
  favorites    Favorites[]
}

model Favorites {
  id     Int   @id @default(autoincrement())
  userId Int
  tagId  Int
  user   Users @relation(fields: [userId], references: [id])
  tag    Tags  @relation(fields: [tagId], references: [id])
}

model Tags {
  id           Int            @id @default(autoincrement())
  typeId       Int
  name         String         @db.VarChar(50)
  type         Types          @relation(fields: [typeId], references: [id])
  Favorites    Favorites[]
  Questiontags Questiontags[]
}

model Midias {
  id         Int        @id @default(autoincrement())
  url        String
  questionId Int?
  answerId   Int?
  answer    Answers?   @relation(fields: [answerId], references: [id])
  question   Questions? @relation(fields: [questionId], references: [id])
}

model Questiontags {
  id         Int       @id @default(autoincrement())
  tagId      Int
  questionId Int
  tag        Tags      @relation(fields: [tagId], references: [id])
  question   Questions @relation(fields: [questionId], references: [id])
}